/* -*- C++ -*- */
/* Generated by D:\Document\EDUKASI\MAGANG\LEN\OpenDDS-Java\OpenDDS-3.28.1\bin\opendds_idl version 3.28.1 (ACE version 6.5.20) running on input file HelloWorld.idl */
#ifndef OPENDDS_IDL_GENERATED_HELLOWORLDTYPESUPPORTIMPL_H_JPIJ6O
#define OPENDDS_IDL_GENERATED_HELLOWORLDTYPESUPPORTIMPL_H_JPIJ6O

#include <dds/Version.h>
#if !OPENDDS_VERSION_EXACTLY(3, 28, 1)
#  error "This file should be regenerated with opendds_idl"
#endif
#include <dds/DCPS/Definitions.h>

#include <dds/DdsDcpsC.h>

#include "HelloWorldC.h"
#include "dds/DCPS/Serializer.h"
#include "dds/DCPS/Service_Participant.h"
#include "dds/DCPS/Util.h"
#include "dds/DCPS/ValueReader.h"
#include "dds/DCPS/ValueWriter.h"
#include "dds/DCPS/XTypes/DynamicDataAdapter.h"
#include "dds/DCPS/XTypes/TypeObject.h"


/* Begin MODULE: CORBA */


/* End MODULE: CORBA */


/* Begin MODULE: HelloWorld */



/* Begin STRUCT: Message */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

struct HelloWorld_Message_xtag {};
template<> HelloWorld_Export
const XTypes::TypeIdentifier& getMinimalTypeIdentifier<HelloWorld_Message_xtag>();

template<> HelloWorld_Export
const XTypes::TypeMap& getMinimalTypeMap<HelloWorld_Message_xtag>();

} }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

HelloWorld_Export
bool vread(OpenDDS::DCPS::ValueReader& value_reader,  ::HelloWorld::Message& value);

HelloWorld_Export
bool vread(OpenDDS::DCPS::ValueReader& value_reader, const NestedKeyOnly< ::HelloWorld::Message>& value);

} }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

HelloWorld_Export
bool vwrite(OpenDDS::DCPS::ValueWriter& value_writer, const  ::HelloWorld::Message& value);

HelloWorld_Export
bool vwrite(OpenDDS::DCPS::ValueWriter& value_writer, const NestedKeyOnly<const  ::HelloWorld::Message>& value);

} }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

template<> HelloWorld_Export
void set_default( ::HelloWorld::Message& stru);

HelloWorld_Export
void serialized_size(const Encoding& encoding, size_t& size, const ::HelloWorld::Message& stru);

HelloWorld_Export
bool operator<<(Serializer& strm, const ::HelloWorld::Message& stru);

HelloWorld_Export
bool operator>>(Serializer& strm,  ::HelloWorld::Message& stru);

HelloWorld_Export
void serialized_size(const Encoding& encoding, size_t& size, const NestedKeyOnly<const ::HelloWorld::Message>& stru);

HelloWorld_Export
bool operator<<(Serializer& strm, const NestedKeyOnly<const ::HelloWorld::Message>& stru);

HelloWorld_Export
bool operator>>(Serializer& strm, const NestedKeyOnly< ::HelloWorld::Message>& stru);

} }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE
OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

class MetaStruct;

template<typename T>
const MetaStruct& getMetaStruct();

template<>
HelloWorld_Export
const MetaStruct& getMetaStruct< ::HelloWorld::Message>();
HelloWorld_Export
bool gen_skip_over(Serializer& ser,  ::HelloWorld::Message*);

} }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#endif // ifndef OPENDDS_NO_CONTENT_SUBSCRIPTION_PROFILE

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace XTypes {

#ifndef OPENDDS_SAFETY_PROFILE
template <>
HelloWorld_Export DDS::DynamicData_ptr get_dynamic_data_adapter< ::HelloWorld::Message,  ::HelloWorld::Message>(DDS::DynamicType_ptr type, const  ::HelloWorld::Message& value);

template <>
HelloWorld_Export DDS::DynamicData_ptr get_dynamic_data_adapter< ::HelloWorld::Message,  ::HelloWorld::Message>(DDS::DynamicType_ptr type,  ::HelloWorld::Message& value);

template <>
HelloWorld_Export const  ::HelloWorld::Message* get_dynamic_data_adapter_value< ::HelloWorld::Message,  ::HelloWorld::Message>(DDS::DynamicData_ptr dd);

#endif // ifndef OPENDDS_SAFETY_PROFILE

} }
OPENDDS_END_VERSIONED_NAMESPACE_DECL


/* End STRUCT: Message */

/* End MODULE: HelloWorld */
OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL
namespace OpenDDS { namespace DCPS {

} }
OPENDDS_END_VERSIONED_NAMESPACE_DECL

#endif /* OPENDDS_IDL_GENERATED_HELLOWORLDTYPESUPPORTIMPL_H_JPIJ6O */
